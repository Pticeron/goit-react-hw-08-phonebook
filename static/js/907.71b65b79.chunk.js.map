{"version":3,"file":"static/js/907.71b65b79.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleFormSubmit = (values, { resetForm }) => {\n    const loweredName = values.name.toLowerCase();\n\n    contacts.find(contact => contact.name.toLowerCase() === loweredName)\n      ? alert(`${values.name} is already in contacts`)\n      : dispatch(addContact(values)) && resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', phone: '' }}\n      onSubmit={handleFormSubmit}\n    >\n      <Form className={css.form}>\n        <label className={css.formLabel}>\n          Name\n          <Field\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            placeholder=\"Enter name\"\n            className={css.formName}\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n        </label>\n        <label className={css.formLabel}>\n          Number\n          <Field\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            placeholder=\"Enter phone number\"\n            className={css.formName}\n          />\n        </label>\n        <ErrorMessage name=\"number\" component=\"div\" />\n        <button type=\"submit\" className={css.formBtn}>\n          Add contact\n        </button>\n      </Form>\n    </Formik>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operation';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.phone}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  }\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","ContactForm","dispatch","useDispatch","useSelector","initialValues","name","phone","onSubmit","values","resetForm","loweredName","toLowerCase","find","contact","alert","addContact","className","css","type","pattern","title","required","placeholder","component","ContactList","visibleContacts","includes","getVisibleContacts","map","id","onClick","deleteContact","onDeleteContact","Filter","value","onChange","e","setFilter","target","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}