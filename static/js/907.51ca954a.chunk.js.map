{"version":3,"file":"static/js/907.51ca954a.chunk.js","mappings":"yOACA,GAAgB,KAAO,0BAA0B,SAAW,8BAA8B,WAAa,gCAAgC,QAAU,8B,UCApIA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EACtBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,OAAOA,MAAjB,EACpBC,EAAkB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAAnB,E,SCGvBC,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACXZ,GAAQa,EAAAA,EAAAA,IAAYhB,GAyB1B,OACE,kBAAMiB,UAAWC,EAAAA,KAAUC,SAdJ,SAAAC,GACvBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,eAEoD,KADhD,OAAOpB,GACRqB,WAAU,SAAAC,GAAO,OAAIf,IAASe,EAAQf,IAArB,IACjCgB,MAAM,GAAD,OAAIhB,EAAJ,6BAELI,GAASa,EAAAA,EAAAA,IAAW,CAAEjB,KAAAA,EAAME,OAAAA,KAG9BU,EAAKM,OACN,EAGC,WACE,mBAAOX,UAAWC,EAAAA,UAAlB,kBAEE,kBACED,UAAWC,EAAAA,SACXW,KAAK,OACLnB,KAAK,OACLoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,YAAY,aACZC,MAAOxB,EACPyB,SApCiB,SAAAf,GACvB,IAAQc,EAAUd,EAAEgB,OAAZF,MACRvB,EAAQuB,EACT,QAoCG,mBAAOjB,UAAWC,EAAAA,UAAlB,oBAEE,kBACED,UAAWC,EAAAA,WACXW,KAAK,MACLnB,KAAK,SACLoB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,YAAY,qBACZC,MAAOtB,EACPuB,SA7CmB,SAAAf,GACzB,IAAQc,EAAUd,EAAEgB,OAAZF,MACRrB,EAAUqB,EACX,QA6CG,mBAAQjB,UAAWC,EAAAA,QAAaW,KAAK,SAArC,2BAKL,ECrED,GAAgB,YAAc,iCAAiC,gBAAkB,qCAAqC,mBAAqB,yCCc9HQ,EAAc,WACzB,IAEMC,EAbmB,SAACpC,EAAUG,GACpC,OAAKA,EAGIH,EAASG,QAAO,SAAAoB,GACrB,OAAOA,EAAQf,KAAK6B,cAAcC,SAASnC,EAAOkC,cACnD,IAJMrC,CAMV,CAKyBuC,EAFPzB,EAAAA,EAAAA,IAAYhB,IACdgB,EAAAA,EAAAA,IAAYZ,IAErBU,GAAWC,EAAAA,EAAAA,MAMjB,OACE,gBAAKE,UAAWC,EAAAA,kBAAhB,UACE,eAAID,UAAWC,EAAAA,YAAf,SACGoB,EAAgBI,KAAI,SAACjB,EAASkB,GAAV,OACnB,gBAAa1B,UAAWC,EAAAA,gBAAxB,UACGO,EAAQf,KADX,KACmBe,EAAQb,QACzB,mBACEiB,KAAK,SACLZ,UAAWC,EAAAA,mBACX0B,QAAS,kBAbG,SAAAD,GACtB7B,GAAS+B,EAAAA,EAAAA,IAAcF,GACxB,CAW0BG,CAAgBrB,EAAQkB,GAA9B,EAHX,sBAFOA,EADU,OAe5B,E,UC1CD,GAAgB,WAAa,4BCIhBI,EAAS,WACpB,IAAM1C,GAASW,EAAAA,EAAAA,IAAYZ,GACrBU,GAAWC,EAAAA,EAAAA,MAMjB,OACE,4BACE,kBAAOE,UAAWC,EAAAA,YAAlB,qCACA,kBACED,UAAWC,EAAAA,WACXW,KAAK,OACLnB,KAAK,SACLuB,YAAY,wBACZC,MAAO7B,EACP8B,SAbe,SAAAf,GACnBN,GAASkC,EAAAA,EAAAA,GAAU5B,EAAEgB,OAAOF,OAC7B,MAeF,ECjBc,SAASe,IACtB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXR,GAAYS,EAAAA,EAAAA,IAAYV,GAM9B,OAJA4C,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAGF,iCACE,SAACsC,EAAA,EAAD,WACE,4CAEF,SAAC5C,EAAD,KACA,yBAAMD,GAAa,4BACnB,SAACwC,EAAD,KACA,SAACV,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"formName\":\"ContactForm_formName__9bHzl\",\"formNumber\":\"ContactForm_formNumber__UMrmC\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\n","import css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operation';\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts);\n\n  const handleChangeName = e => {\n    const { value } = e.target;\n    setName(value);\n  };\n\n  const handleChangeNumber = e => {\n    const { value } = e.target;\n    setNumber(value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const contactsLists = [...items];\n    if (contactsLists.findIndex(contact => name === contact.name) !== -1) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n    }\n\n    form.reset();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleFormSubmit}>\n      <label className={css.formLabel}>\n        Name\n        <input\n          className={css.formName}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name\"\n          value={name}\n          onChange={handleChangeName}\n        />\n      </label>\n      <label className={css.formLabel}>\n        Number\n        <input\n          className={css.formNumber}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Enter phone number\"\n          value={number}\n          onChange={handleChangeNumber}\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactListItem\":\"ContactList_contactListItem__3th7-\",\"contactListItemBtn\":\"ContactList_contactListItemBtn__TXYnT\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operation';\nimport css from './ContactList.module.css';\n\nconst getVisibleContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  } else {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  }\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const visibleContacts = getVisibleContacts(contacts, filter);\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <div className={css.wraperContactList}>\n      <ul className={css.contactList}>\n        {visibleContacts.map((contact, id) => (\n          <li key={id} className={css.contactListItem}>\n            {contact.name}: {contact.number}\n            <button\n              type=\"button\"\n              className={css.contactListItemBtn}\n              onClick={() => onDeleteContact(contact.id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"filterName\":\"Filter_filterName__Y2kKA\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(setFilter(e.target.value));\n  }\n\n  return (\n    <div>\n      <label className={css.filterLabel}>Find contacts by Name </label>\n      <input\n        className={css.filterName}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find contacts by name\"\n        value={filter}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { fetchContacts } from 'redux/contacts/operation';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","currentTarget","findIndex","contact","alert","addContact","reset","type","pattern","title","required","placeholder","value","onChange","target","ContactList","visibleContacts","toLowerCase","includes","getVisibleContacts","map","id","onClick","deleteContact","onDeleteContact","Filter","setFilter","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}